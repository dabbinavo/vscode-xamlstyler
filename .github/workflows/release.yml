name: Release VSCode Extension

on:
  workflow_dispatch:
    inputs:
      prerelease:
        description: 'Publish as prerelease version'
        required: true
        type: boolean
        default: false

jobs:
  release:
    permissions: write-all
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Build XamlStyler tool
        run: dotnet publish -p:RollForward=Major -o ./tools/xstyler ./tools/XamlStyler/src/XamlStyler.Console

      - name: Remove unnecessary files
        run: find ./tools/xstyler -type f \( -name '*.pdb' -o -name '*.exe' -o -name '*.deps.json' \) -delete

      - name: Extract version from package.json
        id: get_version
        run: echo "::set-output name=VERSION::$(node -p -e "require('./package.json').version")"

      - name: Package VSCode Extension
        run: npx vsce package

      - name: Publish VSCode Extension
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}
        run: |
          if [ ${{ inputs.prerelease }} ]; then
            npx vsce publish --pre-release
          else
            npx vsce publish
          fi

      - name: Create GitHub release
        if: success()
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.get_version.outputs.VERSION }}
          release_name: v${{ steps.get_version.outputs.VERSION }}
          prerelease: ${{ inputs.prerelease }}

      - name: Upload VSIX to GitHub release
        if: success()
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./xamlstyler-*.vsix
          asset_name: your-extension-name-${{ steps.get_version.outputs.VERSION }}.vsix
          asset_content_type: application/vnd.microsoft.vscode.vsix